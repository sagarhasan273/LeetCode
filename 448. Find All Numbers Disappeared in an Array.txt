Python 3:

class Solution:
    def findDisappearedNumbers(self, nums: List[int]) -> List[int]:
        res, l = [], len(nums)
        
        for n in nums:
            i = abs(n) - 1
            nums[i] = -1*abs(nums[i])
        
        res = []
        
        for i in range(l):
            if nums[i] > 0:
                res.append(i+1)
        
        return res


C++ solution:

class Solution {
public:
    vector<int> findDisappearedNumbers(vector<int>& nums) {
        vector<int> result;
        
        for (auto n: nums){
            int i = abs(n) - 1;
            nums[i] = -1 * abs(nums[i]);
        }
        
        for (int i = 0; i < nums.size(); i++){
            if (nums[i] > 0) result.push_back(i+1);
        }
        
        return result;
    }
};